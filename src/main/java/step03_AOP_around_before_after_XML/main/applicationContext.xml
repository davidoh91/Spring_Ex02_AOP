<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- construct Class instances -->
    <bean class="step03_AOP_around_before_after_XML.service.MemberServiceImpl" id="target"/>
    <bean class="step03_AOP_around_before_after_XML.advice.AroundAdvice" id="aroundAdvice"/>
    <bean class="step03_AOP_around_before_after_XML.advice.SampleAdvice" id="sampleAdvice"/>

    <!-- AOP config : xml version -->
    <aop:config>
        <!-- declare pointcut (the regex for multiple joinpoints) -->
        <aop:pointcut expression="execution(public * step03_AOP_around_before_after_XML.service.*Impl.*(..))" id="pointCut"/>

        <!-- define the AOP aspect class and method (also, its pointcut regex)-->
        <aop:aspect id="advice1" ref="aroundAdvice" order="1">
            <aop:around method="around" pointcut-ref="pointCut"/>
        </aop:aspect>
        <aop:aspect id="advice2" ref="sampleAdvice">

            <!-- here, set the before, after, after~ AOP methods -->
            <aop:before method="before" pointcut-ref="pointCut"/>
            <aop:after method="afterFinally" pointcut-ref="pointCut"/>
            <!-- must bind the Object obj (which contains joinPoint's method results ) to AOP -->
            <aop:after-returning method="afterReturning" pointcut-ref="pointCut" returning="obj"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointCut" throwing="e"/>

        </aop:aspect>
    </aop:config>

</beans>